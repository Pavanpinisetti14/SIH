/* background with black and inner white matching css */


/* General styles */
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap');
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
body {
    background-color: #000000;
}

/* Form section */
.main-section {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 5%;
    background-color: #FFFFFF;
    width:max-content;
    padding: 20px 0px 20px 0px;
    border-radius: 25px;
}
.register-heading {
    font-size: 24px;
    font-family: 'Poppins', sans-serif;
    font-style: italic;
    color: #F3CA20;
}

.register-form {
    width: 450px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* background-color: #FFFFFF; */
}

.input-field {
    width: 300px;
    position: relative;
    height: 40px;
    line-height: 20px;
    /* margin-bottom: 20px; */
}
/* .labelline {
    position: absolute;
    font-size: 16px;
    color: #FFF;
    padding: 0 10px;
    padding-top:12px;
    margin: 0 20px;
    transition: 0.2s ease;
    background-color: #A1D6E2;
    font-family:'Poppins', sans-serif ;
}
input {
    position: absolute;
    width: 100%;
    outline: none;
    font-size: 19px;
    padding: 0 25px;
    line-height:40px;
    border-radius:10px;
    border: 2px solid #FFF;
    transition: 0.1s ease;
    background-color: transparent;
    z-index:1111;
}
input:focus
input:valid
{   color: #FFF;
    border: 2px solid #66A5AD;
}
input:focus + .labelline
{
    color: #FFF;
    height: 30px;
    line-height: 30px;
    padding: 0 2px;
    transform: translate(-0px,-15px) scale(0.88);
    z-index: 1111;
} */
.input-field input{
    width: 100%;
    height:100%;
    background:transparent;
    color: #000000;
    outline: none;
    border: 2px solid #F3CA20;
    border-radius:10px;
    font-size:18px;
    padding: 0 20px;
}
.input-field label{
    position: absolute;
    top:50%;
    left:12px;
    transform: translateY(-50%);
    font-size:16px;
    padding: 0 15px;
    pointer-events: none;
    font-family:'Poppins', sans-serif;
    transition: 0.1s ease;
    background-color: #FFFFFF;
    color: #F3CA20;
    font-weight: bold;
}
.input-field :focus{
    color: #000000;
}
.input-field input:focus + label,
.input-field input:valid + label{
    position: absolute;
    top:-8px;
    transform: scale(0.88);
    padding: 0 5px;
}
.submitbtn {
    width: 100%;
    height: 40px;
    font-size: 18px;
    font-family: 'Roboto Condensed', sans-serif;
    background-color: transparent;
    border: 2px solid #F3CA20;
    border-radius: 20px;
    color: #F3CA20;
    /* cursor:not-allowed; */
    transition: background-color 0.3s ease, color 0.3s ease;
}
#regsubmitbtn{
    cursor: not-allowed;
}
.submitbtn:hover {
    background-color: #fff;
    color: #000;
}

.alertmsg {
    color: red;
    font-size: 14px;
}
.conditions{
    color:#F3CA20;
    font-family: sans-serif;
    padding-left: 10px;
}
.conditions label{
    display: flex;
    align-items: center;
    gap:10px;
}
.term-condition{
    width:20px;
    height:20px;
}
.redirect{
    color:#F3CA20;
    font-family:sans-serif;
    padding-left:10px;
}
.re{
    color: #000000;
    text-decoration: none;
}
.re:hover{
    text-decoration: underline;
}




///-----cards sliding ------


 let currentIndex = 0;
let 
function updatePaginationButtons() {
    prevButton.disabled = currentIndex === 0;
    nextButton.disabled = currentIndex >= 300 - 1;
}

function updateCardContainer() {
    const offset = 0
    cardContainer.style.transform = `translateX(${offset}px)`;
    updatePaginationButtons();
}

prevButton.addEventListener('click', () => {
    if (currentIndex > 0) {
        currentIndex--;
        updateCardContainer();
    }
});

nextButton.addEventListener('click', () => {
    if (currentIndex < 300 - 1) {
        currentIndex++;
        updateCardContainer();
    }
});

updatePaginationButtons();